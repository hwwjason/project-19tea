<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sckj.repository.mybatis.ContentDAO">

    <resultMap id="ContentResultMap" type="com.sckj.model.Content">
        <result column="id" jdbcType="VARCHAR" property="id" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="status" jdbcType="VARCHAR" property="status" />
    </resultMap>

    <resultMap id="ContentDTOResultMap" extends="ContentResultMap" type="com.sckj.model.dto.ContentDTO"></resultMap>

    <sql id="findDtoSql">
        select * from (
        select * from  sckj_content temp
        ) t
    </sql>

    <select id="findDTOById" parameterType="String" resultMap="ContentDTOResultMap">
        <include refid="findDtoSql"></include>
        <where>
            and t.id = #{id}
        </where>
    </select>

    <select id="findById" parameterType="String" resultMap="ContentResultMap">
        <include refid="findDtoSql"></include>
        <where>
            and t.id = #{id}
        </where>
    </select>

    <select id="findContentPage" parameterType="com.sckj.model.dto.ContentDTO" resultMap="ContentDTOResultMap">
        <include refid="findDtoSql" />
        <where>

        </where>
    </select>

    <select id="getContentList" parameterType="java.util.Map" resultMap="ContentDTOResultMap">
        select * from sckj_content as temp
        <where>
            <if test="null != type and  '' neq type">
                and  UPPER(temp.type) LIKE CONCAT('%',UPPER (#{type}),'%')
            </if>
        </where>
        ORDER BY temp.create_time DESC
    </select>

</mapper>